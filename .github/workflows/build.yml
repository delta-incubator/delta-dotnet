name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"
permissions:
  pages: write
  id-token: write
  pull-requests: write
jobs:
  build-lint-test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            checkTarget: true
          - os: ubuntu-latest
            docsTarget: true
            coverageTarget: true
            cloudTestTarget: true
    runs-on: ${{ matrix.runsOn || matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src/DeltaLake/Bridge

      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      - name: Build
        # We intentionally just build debug mode in this CI. We build before
        # regen to confirm no interop header changes.
        run: dotnet build

      - name: Regen confirm unchanged
        if: ${{ matrix.checkTarget }}
        # Needs to be 16.0.0 until https://github.com/dotnet/ClangSharp/pull/506 released
        run: |
          dotnet tool install --global --version 16.0.0 ClangSharpPInvokeGenerator
          # ClangSharpPInvokeGenerator @src/DeltaLake/Bridge/GenerateInterop.rsp
          npx doctoc README.md
          git config --global core.safecrlf false
          git diff --exit-code

      - name: Check format
        if: ${{ matrix.checkTarget }}
        run: dotnet format --verify-no-changes

      - name: Test
        env:
          RUST_BACKTRACE: 1
          # increased stack size currently necessary for osx
          DOTNET_DefaultStackSize: "180000"
        run: dotnet test -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=./lcov.info --logger "console;verbosity=detailed" --blame-crash -v n

      - name: Upload test failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-fail-${{ matrix.os }}
          path: tests/DeltaLake.Tests/TestResults

      - name: Setup LCOV
        if: github.event_name == 'pull_request' && matrix.coverageTarget
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Report code coverage
        if: github.event_name == 'pull_request' && matrix.coverageTarget
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: tests/DeltaLake.Tests/lcov.info
          minimum-coverage: 80
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          #working-directory: apps/my-first-app
          update-comment: true

      - name: Build docs
        if: ${{ matrix.docsTarget }}
        run: |
          dotnet tool update -g docfx
          docfx src/DeltaLake.ApiDoc/docfx.json --warningsAsErrors

      - name: Upload artifact
        if: ${{ github.ref == 'refs/heads/main' && matrix.docsTarget }}
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "src/DeltaLake.ApiDoc/_site"

      - name: Deploy to GitHub Pages
        if: ${{ github.ref == 'refs/heads/main' && matrix.docsTarget }}
        id: deployment
        uses: actions/deploy-pages@v4
